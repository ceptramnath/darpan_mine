import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:sqfentity/sqfentity.dart';
import 'package:sqfentity_gen/sqfentity_gen.dart';
import 'package:http/http.dart' as http;

part 'BookingDBModel.g.dart';

const tableArticleTypes = SqfEntityTable(
    tableName: 'ArticleTypes',
    primaryKeyName: 'Article_Prefix_Code',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('Article_Category_Name', DbType.text),
      SqfEntityField('Article_Used_Word', DbType.text),
    ]);

const registerLetterBooking = SqfEntityTable(
    tableName: 'letterBooking',
    primaryKeyName: 'ArticleNumber',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('FacilityId', DbType.text),
      SqfEntityField('BookingFacilityZip', DbType.text),
      SqfEntityField('DistributionChannel', DbType.text),
      SqfEntityField('UserID', DbType.text),
      SqfEntityField('CounterNumber', DbType.text),
      SqfEntityField('InvoiceNumber', DbType.text),
      SqfEntityField('TotalAmount', DbType.text),
      SqfEntityField('BookingDate', DbType.text),
      SqfEntityField('BookingTime', DbType.text),
      SqfEntityField('CurrencyID', DbType.text),
      SqfEntityField('TenderID', DbType.text),
      SqfEntityField('TotalCashAmount', DbType.text),
      SqfEntityField('RoundOffDifference', DbType.text),
      SqfEntityField('CircleCode', DbType.text),
      SqfEntityField('LineItemNumber', DbType.text),
      SqfEntityField('BasePrice', DbType.text),
      SqfEntityField('LineItemTotalAmount', DbType.text),
      SqfEntityField('Division', DbType.text),
      SqfEntityField('OrderType', DbType.text),
      SqfEntityField('ProductType', DbType.text),
      SqfEntityField('ProductCode', DbType.text),
      SqfEntityField('WeightCode', DbType.text),
      SqfEntityField('Weight', DbType.text),
      SqfEntityField('Quantity', DbType.text),
      SqfEntityField('SenderCustomerNumber', DbType.text),
      SqfEntityField('SenderName', DbType.text),
      SqfEntityField('SenderAddress', DbType.text),
      SqfEntityField('SenderCity', DbType.text),
      SqfEntityField('SenderState', DbType.text),
      SqfEntityField('SenderZip', DbType.text),
      SqfEntityField('SenderCountry', DbType.text),
      SqfEntityField('RecipientName', DbType.text),
      SqfEntityField('RecipientAddress', DbType.text),
      SqfEntityField('RecipientCity', DbType.text),
      SqfEntityField('RecipientState', DbType.text),
      SqfEntityField('RecipientZip', DbType.text),
      SqfEntityField('RecipientCountryID', DbType.text),
      SqfEntityField('RecipientMobile', DbType.text),
      SqfEntityField('RecipientEmail', DbType.text),
      SqfEntityField('ReturnName', DbType.text),
      SqfEntityField('ReturnAddress', DbType.text),
      SqfEntityField('ReturnCity', DbType.text),
      SqfEntityField('ReturnState', DbType.text),
      SqfEntityField('ReturnZip', DbType.text),
      SqfEntityField('ReturnCountryID', DbType.text),
      SqfEntityField('CommissionAmount', DbType.text),
      SqfEntityField('TaxAmount', DbType.text),
      SqfEntityField('RepaymentMode', DbType.text),
      SqfEntityField('PostageDue', DbType.text),
      SqfEntityField('PrepaidAmount', DbType.text),
      SqfEntityField('MaterialGroup', DbType.text),
      SqfEntityField('DestinationFacility', DbType.text),
      SqfEntityField('VAS', DbType.text),
      SqfEntityField('VASValue', DbType.text),
      SqfEntityField('ElapsedTime', DbType.text),
      SqfEntityField('IsFullyPrepaid', DbType.text),
      SqfEntityField('IsOnPostalService', DbType.text),
      SqfEntityField('Status', DbType.text),
      SqfEntityField('FileCreated', DbType.text),
      SqfEntityField('BagNumber', DbType.text),
      SqfEntityField('FileName', DbType.text),
      SqfEntityField('FileCreatedDateTime', DbType.text),
      SqfEntityField('FileTransmitted', DbType.text),
      SqfEntityField('FileTransmittedDateTime', DbType.text),
      SqfEntityField('CancellationReason', DbType.text),
      SqfEntityField('Authorized', DbType.text),
    ]);

const parcelBooking = SqfEntityTable(
    tableName: 'parcelBooking',
    primaryKeyName: 'ArticleNumber',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('FacilityId', DbType.text),
      SqfEntityField('BookingFacilityZip', DbType.text),
      SqfEntityField('DistributionChannel', DbType.text),
      SqfEntityField('UserID', DbType.text),
      SqfEntityField('CounterNumber', DbType.text),
      SqfEntityField('InvoiceNumber', DbType.text),
      SqfEntityField('TotalAmount', DbType.text),
      SqfEntityField('BookingDate', DbType.text),
      SqfEntityField('BookingTime', DbType.text),
      SqfEntityField('CurrencyID', DbType.text),
      SqfEntityField('TenderID', DbType.text),
      SqfEntityField('TotalCashAmount', DbType.text),
      SqfEntityField('RoundOffDifference', DbType.text),
      SqfEntityField('CheckerUserID', DbType.text),
      SqfEntityField('CircleCode', DbType.text),
      SqfEntityField('LineItemNumber', DbType.text),
      SqfEntityField('BasePrice', DbType.text),
      SqfEntityField('LineItemTotalAmount', DbType.text),
      SqfEntityField('Division', DbType.text),
      SqfEntityField('OrderType', DbType.text),
      SqfEntityField('ProductType', DbType.text),
      SqfEntityField('ProductCode', DbType.text),
      SqfEntityField('WeightCode', DbType.text),
      SqfEntityField('Weight', DbType.text),
      SqfEntityField('Quantity', DbType.text),
      SqfEntityField('SenderCustomerNumber', DbType.text),
      SqfEntityField('SenderName', DbType.text),
      SqfEntityField('SenderAddress', DbType.text),
      SqfEntityField('SenderCity', DbType.text),
      SqfEntityField('SenderState', DbType.text),
      SqfEntityField('SenderZip', DbType.text),
      SqfEntityField('SenderCountry', DbType.text),
      SqfEntityField('RecipientName', DbType.text),
      SqfEntityField('RecipientAddress', DbType.text),
      SqfEntityField('RecipientCity', DbType.text),
      SqfEntityField('RecipientState', DbType.text),
      SqfEntityField('RecipientZip', DbType.text),
      SqfEntityField('RecipientCountryID', DbType.text),
      SqfEntityField('RecipientMobile', DbType.text),
      SqfEntityField('RecipientEmail', DbType.text),
      SqfEntityField('ReturnName', DbType.text),
      SqfEntityField('ReturnAddress', DbType.text),
      SqfEntityField('ReturnCity', DbType.text),
      SqfEntityField('ReturnState', DbType.text),
      SqfEntityField('ReturnZip', DbType.text),
      SqfEntityField('ReturnCountryID', DbType.text),
      SqfEntityField('CommissionAmount', DbType.text),
      SqfEntityField('MaterialGroup', DbType.text),
      SqfEntityField('DestinationFacility', DbType.text),
      SqfEntityField('TaxAmount', DbType.text),
      SqfEntityField('RepaymentMode', DbType.text),
      SqfEntityField('PostageDue', DbType.text),
      SqfEntityField('PrepaidAmount', DbType.text),
      SqfEntityField('VAS', DbType.text),
      SqfEntityField('VASValue', DbType.text),
      SqfEntityField('IsAMS', DbType.text),
      SqfEntityField('ElapsedTime', DbType.text),
      SqfEntityField('IsFullPrepaid', DbType.text),
      SqfEntityField('IsOnPostalService', DbType.text),
      SqfEntityField('Status', DbType.text),
      SqfEntityField('BagNumber', DbType.text),
      SqfEntityField('FileCreated', DbType.text),
      SqfEntityField('FileName', DbType.text),
      SqfEntityField('FileCreatedDateTime', DbType.text),
      SqfEntityField('FileTransmitted', DbType.text),
      SqfEntityField('FileTransmittedDateTime', DbType.text),
      SqfEntityField('CancellationReason', DbType.text),
      SqfEntityField('Authorized', DbType.text),
    ]);

const speedBooking = SqfEntityTable(
    tableName: 'speedBooking',
    primaryKeyName: 'ArticleNumber',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('FacilityId', DbType.text),
      SqfEntityField('BookingFacilityZip', DbType.text),
      SqfEntityField('DistributionChannel', DbType.text),
      SqfEntityField('UserID', DbType.text),
      SqfEntityField('CounterNumber', DbType.text),
      SqfEntityField('InvoiceNumber', DbType.text),
      SqfEntityField('TotalAmount', DbType.text),
      SqfEntityField('BookingDate', DbType.text),
      SqfEntityField('BookingTime', DbType.text),
      SqfEntityField('CurrencyID', DbType.text),
      SqfEntityField('TenderID', DbType.text),
      SqfEntityField('TotalCashAmount', DbType.text),
      SqfEntityField('RoundOffDifference', DbType.text),
      SqfEntityField('CircleCode', DbType.text),
      SqfEntityField('LineItemNumber', DbType.text),
      SqfEntityField('BasePrice', DbType.text),
      SqfEntityField('LineItemTotalAmount', DbType.text),
      SqfEntityField('Division', DbType.text),
      SqfEntityField('OrderType', DbType.text),
      SqfEntityField('ProductType', DbType.text),
      SqfEntityField('ProductCode', DbType.text),
      SqfEntityField('WeightCode', DbType.text),
      SqfEntityField('Weight', DbType.text),
      SqfEntityField('DistanceCode', DbType.text),
      SqfEntityField('Distance', DbType.text),
      SqfEntityField('Quantity', DbType.text),
      SqfEntityField('SenderCustomerNumber', DbType.text),
      SqfEntityField('SenderName', DbType.text),
      SqfEntityField('SenderAddress', DbType.text),
      SqfEntityField('SenderCity', DbType.text),
      SqfEntityField('SenderState', DbType.text),
      SqfEntityField('SenderZip', DbType.text),
      SqfEntityField('SenderCountry', DbType.text),
      SqfEntityField('SenderMobile', DbType.text),
      SqfEntityField('RecipientName', DbType.text),
      SqfEntityField('RecipientAddress', DbType.text),
      SqfEntityField('RecipientCity', DbType.text),
      SqfEntityField('RecipientState', DbType.text),
      SqfEntityField('RecipientZip', DbType.text),
      SqfEntityField('RecipientCountryID', DbType.text),
      SqfEntityField('ReturnName', DbType.text),
      SqfEntityField('ReturnAddress', DbType.text),
      SqfEntityField('ReturnCity', DbType.text),
      SqfEntityField('ReturnState', DbType.text),
      SqfEntityField('ReturnZip', DbType.text),
      SqfEntityField('ReturnCountryID', DbType.text),
      SqfEntityField('TaxAmount', DbType.text),
      SqfEntityField('PostageDue', DbType.text),
      SqfEntityField('RepaymentMode', DbType.text),
      SqfEntityField('PrepaidAmount', DbType.text),
      SqfEntityField('MaterialGroup', DbType.text),
      SqfEntityField('DestinationFacility', DbType.text),
      SqfEntityField('ElapsedTime', DbType.text),
      SqfEntityField('IsFullPrepaid', DbType.text),
      SqfEntityField('VAS', DbType.text),
      SqfEntityField('VASValue', DbType.text),
      SqfEntityField('Status', DbType.text),
      SqfEntityField('BagNumber', DbType.text),
      SqfEntityField('FileCreated', DbType.text),
      SqfEntityField('FileName', DbType.text),
      SqfEntityField('FileCreatedDateTime', DbType.text),
      SqfEntityField('FileTransmitted', DbType.text),
      SqfEntityField('FileTransmittedDateTime', DbType.text),
      SqfEntityField('CancellationReason', DbType.text),
      SqfEntityField('Authorized', DbType.text),
    ]);

const emoBooking = SqfEntityTable(
    tableName: 'emoBooking',
    primaryKeyName: 'ArticleNumber',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('FacilityId', DbType.text),
      SqfEntityField('BookingFacilityZip', DbType.text),
      SqfEntityField('DistributionChannel', DbType.text),
      SqfEntityField('UserID', DbType.text),
      SqfEntityField('CounterNumber', DbType.text),
      SqfEntityField('InvoiceNumber', DbType.text),
      SqfEntityField('TotalAmount', DbType.text),
      SqfEntityField('BookingDate', DbType.text),
      SqfEntityField('BookingTime', DbType.text),
      SqfEntityField('CurrencyID', DbType.text),
      SqfEntityField('TenderID', DbType.text),
      SqfEntityField('TotalCashAmount', DbType.text),
      SqfEntityField('RoundOffDifference', DbType.text),
      SqfEntityField('CheckerUserID', DbType.text),
      SqfEntityField('CircleCode', DbType.text),
      SqfEntityField('LineItemNumber', DbType.text),
      SqfEntityField('BasePrice', DbType.text),
      SqfEntityField('LineItemTotalAmount', DbType.text),
      SqfEntityField('Division', DbType.text),
      SqfEntityField('OrderType', DbType.text),
      SqfEntityField('ProductType', DbType.text),
      SqfEntityField('ProductCode', DbType.text),
      SqfEntityField('ValueCode', DbType.text),
      SqfEntityField('Value', DbType.text),
      SqfEntityField('Quantity', DbType.text),
      SqfEntityField('SenderCustomerNumber', DbType.text),
      SqfEntityField('SenderName', DbType.text),
      SqfEntityField('SenderAddress', DbType.text),
      SqfEntityField('SenderCity', DbType.text),
      SqfEntityField('SenderState', DbType.text),
      SqfEntityField('SenderZip', DbType.text),
      SqfEntityField('SenderCountry', DbType.text),
      SqfEntityField('RecipientName', DbType.text),
      SqfEntityField('RecipientAddress', DbType.text),
      SqfEntityField('RecipientCity', DbType.text),
      SqfEntityField('RecipientState', DbType.text),
      SqfEntityField('RecipientZip', DbType.text),
      SqfEntityField('RecipientCountryID', DbType.text),
      SqfEntityField('RecipientMobile', DbType.text),
      SqfEntityField('RecipientEmail', DbType.text),
      SqfEntityField('ReturnName', DbType.text),
      SqfEntityField('ReturnAddress', DbType.text),
      SqfEntityField('ReturnCity', DbType.text),
      SqfEntityField('ReturnState', DbType.text),
      SqfEntityField('ReturnZip', DbType.text),
      SqfEntityField('ReturnCountryID', DbType.text),
      SqfEntityField('CommissionAmount', DbType.text),
      SqfEntityField('RepaymentMode', DbType.text),
      SqfEntityField('MaterialGroup', DbType.text),
      SqfEntityField('DestinationFacility', DbType.text),
      SqfEntityField('SenderMoneyTransferValue', DbType.text),
      SqfEntityField('MOTrackingID', DbType.text),
      SqfEntityField('MOMessage', DbType.text),
      SqfEntityField('ElapsedTime', DbType.text),
      SqfEntityField('BulkAddressType', DbType.text),
      SqfEntityField('VPMOIdentifier', DbType.text),
      SqfEntityField('Status', DbType.text),
      SqfEntityField('BagNumber', DbType.text),
      SqfEntityField('FileCreated', DbType.text),
      SqfEntityField('FileName', DbType.text),
      SqfEntityField('FileCreatedDateTime', DbType.text),
      SqfEntityField('FileTransmitted', DbType.text),
      SqfEntityField('FileTransmittedDateTime', DbType.text),
      SqfEntityField('Authorized', DbType.text),
    ]);

const cancelBooking = SqfEntityTable(
    tableName: 'CancelBooking',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('FacilityId', DbType.text),
      SqfEntityField('BookingFacilityZip', DbType.text),
      SqfEntityField('DistributionChannel', DbType.text),
      SqfEntityField('UserId', DbType.text),
      SqfEntityField('CounterNumber', DbType.text),
      SqfEntityField('InvoiceNumber', DbType.text),
      SqfEntityField('TotalAmount', DbType.text),
      SqfEntityField('BookingDate', DbType.text),
      SqfEntityField('BookingTime', DbType.text),
      SqfEntityField('CurrencyId', DbType.text),
      SqfEntityField('TenderId', DbType.text),
      SqfEntityField('TotalCashAmount', DbType.text),
      SqfEntityField('RoundOffDifferenceAmount', DbType.text),
      SqfEntityField('ParentInvoiceNumber', DbType.text),
      SqfEntityField('CircleCode', DbType.text),
      SqfEntityField('LineItemNumber', DbType.text),
      SqfEntityField('BasePrice', DbType.text),
      SqfEntityField('LineItemTotalAmount', DbType.text),
      SqfEntityField('ArticleNumber', DbType.text),
      SqfEntityField('Division', DbType.text),
      SqfEntityField('OrderType', DbType.text),
      SqfEntityField('ProductType', DbType.text),
      SqfEntityField('ProductCode', DbType.text),
      SqfEntityField('WeightCode', DbType.text),
      SqfEntityField('Weight', DbType.text),
      SqfEntityField('Quantity', DbType.text),
      SqfEntityField('ValueCode', DbType.text),
      SqfEntityField('Value', DbType.text),
      SqfEntityField('DistanceCode', DbType.text),
      SqfEntityField('Distance', DbType.text),
      SqfEntityField('SenderCustomerId', DbType.text),
      SqfEntityField('RecipientCountryId', DbType.text),
      SqfEntityField('IsReversed', DbType.text),
      SqfEntityField('TaxAmount', DbType.text),
      SqfEntityField('PostageDue', DbType.text),
      SqfEntityField('PrepaidAmount', DbType.text),
      SqfEntityField('MaterialGroup', DbType.text),
      SqfEntityField('SerialNumber', DbType.text),
      SqfEntityField('IsFullPrepaid', DbType.text),
      SqfEntityField('VAS', DbType.text),
      SqfEntityField('VASValue', DbType.text),
      SqfEntityField('FileName', DbType.text),
      SqfEntityField('FileCreated', DbType.text),
      SqfEntityField('FileCreatedDateTime', DbType.text),
      SqfEntityField('FileTransmitted', DbType.text),
      SqfEntityField('FileTransmittedDateTime', DbType.text),
      SqfEntityField('CancellationReason', DbType.text),
      SqfEntityField('Authorized', DbType.text),
    ]);

const cancelBiller = SqfEntityTable(
    tableName: 'CancelBiller',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('FacilityId', DbType.text),
      SqfEntityField('BookingFacilityZip', DbType.text),
      SqfEntityField('DistributionChannel', DbType.text),
      SqfEntityField('UserId', DbType.text),
      SqfEntityField('CounterNumber', DbType.text),
      SqfEntityField('InvoiceNumber', DbType.text),
      SqfEntityField('TotalAmount', DbType.text),
      SqfEntityField('BookingDate', DbType.text),
      SqfEntityField('BookingTime', DbType.text),
      SqfEntityField('CurrencyId', DbType.text),
      SqfEntityField('TenderId', DbType.text),
      SqfEntityField('TotalCashAmount', DbType.text),
      SqfEntityField('RoundOffDifferenceAmount', DbType.text),
      SqfEntityField('ParentInvoiceNumber', DbType.text),
      SqfEntityField('CircleCode', DbType.text),
      SqfEntityField('LineItemNumber', DbType.text),
      SqfEntityField('LineItemTotalAmount', DbType.text),
      SqfEntityField('ArticleNumber', DbType.text),
      SqfEntityField('Division', DbType.text),
      SqfEntityField('OrderType', DbType.text),
      SqfEntityField('ProductType', DbType.text),
      SqfEntityField('ProductCode', DbType.text),
      SqfEntityField('ValueCode', DbType.text),
      SqfEntityField('Value', DbType.text),
      SqfEntityField('Quantity', DbType.text),
      SqfEntityField('SenderCustomerId', DbType.text),
      SqfEntityField('IsReversed', DbType.text),
      SqfEntityField('MaterialGroup', DbType.text),
      SqfEntityField('SerialNumber', DbType.text),
      SqfEntityField('AddlBillInfo', DbType.text),
      SqfEntityField('AddlBillAmountInfo', DbType.text),
      SqfEntityField('BillerID', DbType.text),
      SqfEntityField('BillerName', DbType.text),
      SqfEntityField('FileName', DbType.text),
      SqfEntityField('FileCreated', DbType.text),
      SqfEntityField('FileCreatedDateTime', DbType.text),
      SqfEntityField('FileTransmitted', DbType.text),
      SqfEntityField('FileTransmittedDateTime', DbType.text),
      SqfEntityField('CancellationReason', DbType.text),
      SqfEntityField('Authorized', DbType.text),
    ]);

const productSaleTable = SqfEntityTable(
    tableName: 'ProductSaleTable',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('FacilityId', DbType.text),
      SqfEntityField('BookingFacilityZip', DbType.text),
      SqfEntityField('DistributionChannel', DbType.text),
      SqfEntityField('UserId', DbType.text),
      SqfEntityField('CounterNumber', DbType.text),
      SqfEntityField('InvoiceNumber', DbType.text),
      SqfEntityField('TotalAmount', DbType.text),
      SqfEntityField('BookingDate', DbType.text),
      SqfEntityField('BookingTime', DbType.text),
      SqfEntityField('CurrencyId', DbType.text),
      SqfEntityField('TenderId', DbType.text),
      SqfEntityField('TotalCashAmount', DbType.text),
      SqfEntityField('RoundOffDifference', DbType.text),
      SqfEntityField('CircleCode', DbType.text),
      SqfEntityField('LineItemNumber', DbType.text),
      SqfEntityField('BasePrice', DbType.text),
      SqfEntityField('LineItemTotalAmount', DbType.text),
      SqfEntityField('Division', DbType.text),
      SqfEntityField('OrderType', DbType.text),
      SqfEntityField('ProductType', DbType.text),
      SqfEntityField('ProductCode', DbType.text),
      SqfEntityField('Quantity', DbType.text),
      SqfEntityField('SenderCustomerId', DbType.text),
      SqfEntityField('MaterialGroup', DbType.text),
      SqfEntityField('DestinationFacilityId', DbType.text),
      SqfEntityField('UoM', DbType.text),
      SqfEntityField('ElapsedTime', DbType.text),
      SqfEntityField('FileCreated', DbType.text),
      SqfEntityField('FileCreatedDate', DbType.text),
      SqfEntityField('FileName', DbType.text),
      SqfEntityField('FileTransmitted', DbType.text),
      SqfEntityField('FileTransmittedDate', DbType.text),
      SqfEntityField('Authorized', DbType.text),
    ]);

const inventoryDailyTable = SqfEntityTable(
    tableName: 'InventoryDailyTable',
    primaryKeyName: 'InventoryId',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('StampName', DbType.text),
      SqfEntityField('Price', DbType.text),
      SqfEntityField('RecordedDate', DbType.text),
      SqfEntityField('OpeningQuantity', DbType.text),
      SqfEntityField('OpeningValue', DbType.text),
      SqfEntityField('ClosingQuantity', DbType.text),
      SqfEntityField('ClosingValue', DbType.text),
    ]);

const liabilityTable = SqfEntityTable(
    tableName: 'Liability',
    primaryKeyName: 'Date',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('Description', DbType.text),
      SqfEntityField('Amount', DbType.text),
    ]);

const tempLiability = SqfEntityTable(
    tableName: 'tempLiability',
    primaryKeyName: 'Date',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('Description', DbType.text),
      SqfEntityField('Amount', DbType.text)
    ]);

const aoCash = SqfEntityTable(
    tableName: 'bodaSlip',
    primaryKeyName: 'bodaDate',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('cashFrom', DbType.text),
      SqfEntityField('cashTo', DbType.text),
      SqfEntityField('bodaNumber', DbType.text),
    ]);

const bodaBriefTable = SqfEntityTable(
    tableName: 'bodaBrief',
    primaryKeyName: 'BodaGeneratedDate',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('BodaGeneratedTime', DbType.text),
      SqfEntityField('OpeningBalance', DbType.text),
      SqfEntityField('ClosingBalance', DbType.text),
      SqfEntityField('BodaNumber', DbType.text),
      SqfEntityField('MailsAmount', DbType.text),
      SqfEntityField('TotalReceiptsAmount', DbType.text),
      SqfEntityField('CashToAOAmount', DbType.text),
      SqfEntityField('InsuranceAmount', DbType.text),
      SqfEntityField('BankingAmount', DbType.text),
      SqfEntityField('InventoryAmount', DbType.text),
      SqfEntityField('LiabilitiesAmount', DbType.text),
      SqfEntityField('CashIndentAmount', DbType.text),
    ]);

const bodaArticles = SqfEntityTable(
    tableName: 'bodaArticles',
    primaryKeyName: 'ArticleNumber',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('ArticleType', DbType.text),
      SqfEntityField('ArticleAmount', DbType.text),
      SqfEntityField('BodaDate', DbType.text),
      SqfEntityField('BodaTime', DbType.text),
    ]);

const bodaInventory = SqfEntityTable(
    tableName: 'bodaInventory',
    primaryKeyName: 'inventoryid',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('InventoryName', DbType.text),
      SqfEntityField('InventoryQuantity', DbType.text),
      SqfEntityField('InventoryPrice', DbType.text),
      SqfEntityField('InventoryDate', DbType.text),
    ]);

const bodaInsurance = SqfEntityTable(
    tableName: 'bodaInsurance',
    primaryKeyName: 'InsuranceId',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('PolicyNumber', DbType.text),
      SqfEntityField('PolicyType', DbType.text),
      SqfEntityField('PolicyAmount', DbType.text),
      SqfEntityField('PolicyDate', DbType.text),
    ]);

const leaveBalanceTable = SqfEntityTable(
    tableName: 'leaveBalanceTable',
    primaryKeyName: 'EmployeeNumber',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('QuotaType', DbType.text),
      SqfEntityField('LeaveBalance', DbType.text),
    ]);

const emoMoMaster = SqfEntityTable(
    tableName: 'emoMOCommission',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('Commission', DbType.text),
      SqfEntityField('MinimumAmount', DbType.text),
      SqfEntityField('MaximumAmount', DbType.text),
      SqfEntityField('CommissionAmount', DbType.text),
      SqfEntityField('AdditionalService', DbType.text),
      SqfEntityField('ValueID', DbType.text),
      SqfEntityField('Identifier', DbType.text),
    ]);

const insMoMaster = SqfEntityTable(
    tableName: 'insMOCommission',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('Commission', DbType.text),
      SqfEntityField('MinimumAmount', DbType.text),
      SqfEntityField('MaximumAmount', DbType.text),
      SqfEntityField('CommissionAmount', DbType.text),
      SqfEntityField('AdditionalService', DbType.text),
      SqfEntityField('ValueID', DbType.text),
      SqfEntityField('Identifier', DbType.text),
    ]);

const vppMoMaster = SqfEntityTable(
    tableName: 'vppMOCommission',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('Commission', DbType.text),
      SqfEntityField('MinimumAmount', DbType.text),
      SqfEntityField('MaximumAmount', DbType.text),
      SqfEntityField('CommissionAmount', DbType.text),
      SqfEntityField('AdditionalService', DbType.text),
      SqfEntityField('ValueID', DbType.text),
      SqfEntityField('Identifier', DbType.text),
    ]);

const productMaster = SqfEntityTable(
    tableName: 'productsMaster',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('ItemCode', DbType.text),
      SqfEntityField('ShortDescription', DbType.text),
      SqfEntityField('CategoryDescription', DbType.text),
      SqfEntityField('SalePrice', DbType.text),
      SqfEntityField('EffStartDate', DbType.text),
      SqfEntityField('EffEndDate', DbType.text),
      SqfEntityField('POSCurrentStock', DbType.text),
      SqfEntityField('OpeningStock', DbType.text),
      SqfEntityField('Division', DbType.text),
      SqfEntityField('OrderType', DbType.text),
      SqfEntityField('MaterialGroup', DbType.text),
      SqfEntityField('UnitMeasurement', DbType.text),
      SqfEntityField('CreatedBy', DbType.text),
      SqfEntityField('CreatedOn', DbType.text),
      SqfEntityField('ModifiedBy', DbType.text),
      SqfEntityField('ModifiedOn', DbType.text),
      SqfEntityField('Identifier', DbType.text),
    ]);

const serviceMaster = SqfEntityTable(
    tableName: 'serviceMaster',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('ServiceId', DbType.text),
      SqfEntityField('ServiceName', DbType.text),
      SqfEntityField('MinimumWeight', DbType.text),
      SqfEntityField('MaximumWeight', DbType.text),
      SqfEntityField('Division', DbType.text),
      SqfEntityField('OrderType', DbType.text),
      SqfEntityField('ProductType', DbType.text),
      SqfEntityField('MaterialGroup', DbType.text),
      SqfEntityField('Identifier', DbType.text),
    ]);

const distanceMaster = SqfEntityTable(
    tableName: 'distanceMaster',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('Distance', DbType.text),
      SqfEntityField('MinDistance', DbType.text),
      SqfEntityField('MaxDistance', DbType.text),
      SqfEntityField('Service', DbType.text),
      SqfEntityField('Identifier', DbType.text),
    ]);

const taxMaster = SqfEntityTable(
    tableName: 'taxMaster',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('Service', DbType.text),
      SqfEntityField('PercentageValue', DbType.text),
      SqfEntityField('TaxDescription', DbType.text),
      SqfEntityField('Identifier', DbType.text),
    ]);

const weightMaster = SqfEntityTable(
    tableName: 'weightMaster',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('WeightId', DbType.text),
      SqfEntityField('MinimumWeight', DbType.text),
      SqfEntityField('MaximumWeight', DbType.text),
      SqfEntityField('ServiceId', DbType.text),
      SqfEntityField('Identifier', DbType.text),
    ]);

const tariffMaster = SqfEntityTable(
    tableName: 'tariffMaster',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('Service', DbType.text),
      SqfEntityField('WeightId', DbType.text),
      SqfEntityField('Distance', DbType.text),
      SqfEntityField('BasePrice', DbType.text),
      SqfEntityField('Identifier', DbType.text),
    ]);

const excessCashTable = SqfEntityTable(
    tableName: 'excessCashTable',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('BOID', DbType.text),
      SqfEntityField('Date', DbType.text),
      SqfEntityField('Time', DbType.text),
      SqfEntityField('BOName', DbType.text),
      SqfEntityField('HOName', DbType.text),
      SqfEntityField('Amount1', DbType.text),
      SqfEntityField('Amount2', DbType.text),
      SqfEntityField('Amount3', DbType.text),
      SqfEntityField('AmountType', DbType.text),
      SqfEntityField('Amount4', DbType.text),
    ]);

const cashIndentTable = SqfEntityTable(
    tableName: 'cashIndentTable',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('BOID', DbType.text),
      SqfEntityField('Date', DbType.text),
      SqfEntityField('Time', DbType.text),
      SqfEntityField('BOName', DbType.text),
      SqfEntityField('HOName', DbType.text),
      SqfEntityField('Amount1', DbType.text),
      SqfEntityField('Amount2', DbType.text),
      SqfEntityField('Amount3', DbType.text),
      SqfEntityField('AmountType', DbType.text),
    ]);

const specialRemittanceTable = SqfEntityTable(
    tableName: 'specialRemittanceTable',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('SpecialRemittanceId', DbType.text),
      SqfEntityField('Date', DbType.text),
      SqfEntityField('Time', DbType.text),
      SqfEntityField('BOName', DbType.text),
      SqfEntityField('HOName', DbType.text),
      SqfEntityField('Amount1', DbType.text),
      SqfEntityField('Amount2', DbType.text),
      SqfEntityField('Amount3', DbType.text),
      SqfEntityField('AmountType', DbType.text),
    ]);

const setUpInventoryTable = SqfEntityTable(
    tableName: 'setUpInventoryTable',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('BOId', DbType.text),
      SqfEntityField('InventoryName', DbType.text),
      SqfEntityField('Column1', DbType.text),
      SqfEntityField('Column2', DbType.text),
    ]);

const localStoreTable = SqfEntityTable(
    tableName: 'localStoreTable',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('ParentOfficeId', DbType.text),
      SqfEntityField('ParentOfficeName', DbType.text),
      SqfEntityField('OfficeId', DbType.text),
      SqfEntityField('BOSequenceId', DbType.text),
      SqfEntityField('OfficeName', DbType.text),
      SqfEntityField('Address', DbType.text),
      SqfEntityField('Pin', DbType.text),
      SqfEntityField('Latitude', DbType.text),
      SqfEntityField('Longitude', DbType.text),
      SqfEntityField('City', DbType.text),
      SqfEntityField('StateCode', DbType.text),
      SqfEntityField('StateName', DbType.text),
      SqfEntityField('SolutionId', DbType.text),
      SqfEntityField('LegacyCode', DbType.text),
      SqfEntityField('CircleCode', DbType.text),
      SqfEntityField('Circle', DbType.text),
      SqfEntityField('CreatedBy', DbType.text),
      SqfEntityField('CreatedOn', DbType.text),
      SqfEntityField('ModifiedBy', DbType.text),
      SqfEntityField('ModifiedOn', DbType.text),
      SqfEntityField('IsStoreBegin', DbType.text),
      SqfEntityField('WalkInCustomerId', DbType.text),
      SqfEntityField('Identifier', DbType.text),
    ]);

const additionalServiceMappingTable = SqfEntityTable(
    tableName: 'additionalServiceMappingTable',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('ServiceId', DbType.text),
      SqfEntityField('AdditionalServiceId', DbType.text),
      SqfEntityField('AdditionalServicePrice', DbType.text),
      SqfEntityField('Identifier', DbType.text),
    ]);

const switchOnTable = SqfEntityTable(
    tableName: 'switchOnTable',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('ParentOfficeId', DbType.text),
      SqfEntityField('OfficeId', DbType.text),
      SqfEntityField('BOSequenceId', DbType.text),
      SqfEntityField('OfficeName', DbType.text),
      SqfEntityField('LegacyCode', DbType.text),
      SqfEntityField('SanctionedLimit', DbType.text),
      SqfEntityField('CashBalance', DbType.text),
    ]);

const dayBeginModel = SqfEntityTable(
    tableName: 'dayBegin',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('BPMId', DbType.text),
      SqfEntityField('DayBeginTimeStamp1', DbType.text),
      SqfEntityField('DayBeginTimeStamp2', DbType.text),
      SqfEntityField('FileName', DbType.text),
      SqfEntityField('FileCreated', DbType.text),
      SqfEntityField('FileCreatedDateTime', DbType.text),
      SqfEntityField('FileTransmitted', DbType.text),
      SqfEntityField('FileTransmittedDateTime', DbType.text),
    ]);

const cashIndentModel = SqfEntityTable(
    tableName: 'cashIndent',
    primaryKeyName: 'SOSlipNumber',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('SOGenerationDate', DbType.text),
      SqfEntityField('ChequeNumber', DbType.text),
      SqfEntityField('BOName', DbType.text),
      SqfEntityField('SOName', DbType.text),
      SqfEntityField('CashAmount', DbType.text),
      SqfEntityField('Weight', DbType.text),
      SqfEntityField('ChequeAmount', DbType.text),
      SqfEntityField('AmountType', DbType.text),
      SqfEntityField('FileName', DbType.text),
      SqfEntityField('FileCreated', DbType.text),
      SqfEntityField('FileCreatedDateTime', DbType.text),
      SqfEntityField('FileTransmitted', DbType.text),
      SqfEntityField('FileTransmittedDateTime', DbType.text),
    ]);

const switchOnAcknowledge = SqfEntityTable(
    tableName: 'switchOnAcknowledge',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('ParentOfficeNumber', DbType.text),
      SqfEntityField('OfficeId', DbType.text),
      SqfEntityField('BOSequenceId', DbType.text),
      SqfEntityField('OfficeName', DbType.text),
      SqfEntityField('LegacyCode', DbType.text),
      SqfEntityField('SanctionedLimit', DbType.text),
      SqfEntityField('CashBalance', DbType.text),
    ]);

const switchOnAcknowledgement = SqfEntityTable(
    tableName: 'switchOnAcknowledgement',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('LegacyUpdation', DbType.text),
      SqfEntityField('SanctionedDeletion', DbType.text),
      SqfEntityField('SanctionedInsertion', DbType.text),
      SqfEntityField('UpdateWallet', DbType.text),
      SqfEntityField('InsertionClosingBalance', DbType.text),
      SqfEntityField('InsertionOpeningBalance', DbType.text),
      SqfEntityField('InsertionOpeningStock', DbType.text),
    ]);

const billerData = SqfEntityTable(
    tableName: 'billerData',
    primaryKeyName: 'BillerId',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('BillerName', DbType.text),
    ]);

const billData = SqfEntityTable(
    tableName: 'billData',
    primaryKeyName: 'BillId',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('BillName', DbType.text),
      SqfEntityField('BillCode', DbType.text),
      SqfEntityField('BillAccountNumber', DbType.text),
      SqfEntityField('BillDate', DbType.text),
      SqfEntityField('BillPayableAmount', DbType.text),
      SqfEntityField('BillCollectedAmount', DbType.text),
    ]);

const specialRemittanceFile = SqfEntityTable(
    tableName: 'specialRemittanceFile',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('SlipNumber', DbType.text),
      SqfEntityField('Date', DbType.text),
      SqfEntityField('ChequeNumber', DbType.text),
      SqfEntityField('BOProfitName', DbType.text),
      SqfEntityField('SOProfitName', DbType.text),
      SqfEntityField('CashAmount', DbType.text),
      SqfEntityField('Weight', DbType.text),
      SqfEntityField('ChequeAmount', DbType.text),
      SqfEntityField('ChequeCash', DbType.text),
      SqfEntityField("IS_COMMUNICATED", DbType.text),
      SqfEntityField("FILE_NAME", DbType.text),
    ]);

const billFile = SqfEntityTable(
    tableName: 'billFile',
    primaryKeyName: 'id',
    primaryKeyType: PrimaryKeyType.integer_auto_incremental,
    fields: [
      SqfEntityField('FacilityId', DbType.text),
      SqfEntityField('Zip', DbType.text),
      SqfEntityField('Channel', DbType.text),
      SqfEntityField('UserId', DbType.text),
      SqfEntityField('CounterNumber', DbType.text),
      SqfEntityField('InvoiceNumber', DbType.text),
      SqfEntityField('TotalAmount', DbType.text),
      SqfEntityField('BookingDate', DbType.text),
      SqfEntityField('BookingTime', DbType.text),
      SqfEntityField('CurrencyId', DbType.text),
      SqfEntityField('TenderId', DbType.text),
      SqfEntityField('TotalCashAmount', DbType.text),
      SqfEntityField('RoundOffDifference', DbType.text),
      SqfEntityField('CircleCode', DbType.text),
      SqfEntityField('LineItemNumber', DbType.text),
      SqfEntityField('LineItemTotalAmount', DbType.text),
      SqfEntityField('ArticleNumber', DbType.text),
      SqfEntityField('Division', DbType.text),
      SqfEntityField('OrderType', DbType.text),
      SqfEntityField('ProductType', DbType.text),
      SqfEntityField('ProductCode', DbType.text),
      SqfEntityField('ValueCode', DbType.text),
      SqfEntityField('Value', DbType.text),
      SqfEntityField('Quantity', DbType.text),
      SqfEntityField('CustomerId', DbType.text),
      SqfEntityField('MaterialGroup', DbType.text),
      SqfEntityField('DestinationFacilityId', DbType.text),
      SqfEntityField('ElapsedTime', DbType.text),
      SqfEntityField('AdditionalBillInfo', DbType.text),
      SqfEntityField('AdditionalBillAmountInfo', DbType.text),
      SqfEntityField('BillerId', DbType.text),
      SqfEntityField('BillerName', DbType.text),
      SqfEntityField("IS_COMMUNICATED", DbType.text),
      SqfEntityField("FILE_NAME", DbType.text),
    ]);

const dayModel = SqfEntityTable(
    tableName: 'DayModel',
    primaryKeyName: 'DayBeginDate',
    primaryKeyType: PrimaryKeyType.text,
    fields: [
      SqfEntityField('DayBeginTime', DbType.text),
      SqfEntityField('CashOpeningBalance', DbType.text),
      SqfEntityField('CashClosingBalance', DbType.text),
      SqfEntityField('DayCloseDate', DbType.text),
      SqfEntityField('DayCloseTime', DbType.text),
    ]);

@SqfEntityBuilder(bookingModel)
const bookingModel = SqfEntityModel(
    modelName: 'bookingModel',
    password:'l<18eH"|K[5w]g',
    databaseName: 'booking.db',
    databaseTables: [
      tableArticleTypes,
      parcelBooking,
      productSaleTable,
      inventoryDailyTable,
      liabilityTable,
      tempLiability,
      aoCash,
      registerLetterBooking,
      emoBooking,
      speedBooking,
      productMaster,
      emoMoMaster,
      insMoMaster,
      vppMoMaster,
      distanceMaster,
      taxMaster,
      tariffMaster,
      serviceMaster,
      weightMaster,
      leaveBalanceTable,
      cashIndentTable,
      specialRemittanceTable,
      excessCashTable,
      setUpInventoryTable,
      localStoreTable,
      additionalServiceMappingTable,
      switchOnTable,
      dayBeginModel,
      cashIndentModel,
      cancelBooking,
      cancelBiller,
      switchOnAcknowledge,
      switchOnAcknowledgement,
      billerData,
      specialRemittanceFile,
      billFile,
      dayModel,
      bodaBriefTable,
      bodaArticles,
      bodaInventory,
      bodaInsurance,
      billData
    ],
    bundledDatabasePath: null);
